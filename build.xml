<!--======================================================================

   Build file for ScalaPlugin

   This file will allow you to build your plugin with Ant.  If you do not
   have an Ant installation of your own, you can use the one supplied with
   GATE by running

     {gate.home}/bin/ant

   or, on Windows
     
     {gate.home}\bin\ant

   where {gate.home} is the directory in which GATE was installed.

   $Id: build.xml 11755 2009-10-23 18:18:15Z johann_p $

=======================================================================-->
<project name="ScalaPlugin" basedir="." default="all">

  <property file="build.properties" />

  <!--=======================================================
    Property settings.  You should not need to edit these
    directly, if you need to set a different value for any
    property you should edit build.properties and override
    them there.
  ========================================================-->

  <!-- Name of the plugin -->
  <property name="plugin.name" value="ScalaPlugin"/>

  <!-- get environment variables -->
  <property environment="env"/>

  <!-- if GATE_HOME is set it takes preference over ../.. but
       something set in build.properties will still be preferred -->
  <property name="gate.home" location="${env.GATE_HOME}" />

  <property name="scala.home" location="${env.SCALA_HOME}" />

  <!-- location of the top-level GATE installation directory -->
  <property name="gate.home" location="../.." />

  <!-- location of GATE lib directory - should be inferred from gate.home -->
  <property name="gate.lib" location="${gate.home}/lib" />

  <!-- location of gate.jar - should be inferred from gate.home -->
  <property name="gate.jar" location="${gate.home}/bin/gate.jar" />

  <!-- Source directory - contains the Scala source files for this plugin -->
  <property name="src.dir" location="src" />

  <!-- directory to contain the compiled classes -->
  <property name="classes.dir" location="classes" />

  <!-- documentation directory -->
  <property name="doc.dir" location="doc" />

  <!-- JavaDoc documentation directory -->
  <property name="javadoc.dir" location="${doc.dir}/javadoc" />

  <!-- ScalaDoc documentation directory -->
  <property name="scaladoc.dir" location="${doc.dir}/scaladoc" />

  <!-- lib directory - put any additional JAR files your plugin requires into
       this directory.  You will also need to add them as <JAR> entries in
       creole.xml -->
  <property name="lib.dir" location="lib" />

  <!-- location for the generated JAR file -->
  <property name="jar.location" location="${plugin.name}.jar" />



  <!-- Classpath to compile - includes gate.jar, GATE/lib/*.jar and any local
       library JAR files. -->
  <path id="scalacompile.classpath">
    <pathelement location="${scala.home}/lib/scala-compiler.jar"/>
    <pathelement location="${scala.home}/lib/scala-library.jar"/>
    <pathelement location="${gate.jar}" />
    <fileset dir="${gate.lib}">
      <include name="**/*.jar" />
      <include name="**/*.zip" />
    </fileset>
    <fileset dir="${lib.dir}" includes="**/*.jar" />
  </path>
  <path id="javacompile.classpath">
    <pathelement location="${scala.home}/lib/scala-compiler.jar"/>
    <pathelement location="${scala.home}/lib/scala-library.jar"/>
    <pathelement location="${gate.jar}" />
    <pathelement location="${classes.dir}" />
    <fileset dir="${gate.lib}">
      <include name="**/*.jar" />
      <include name="**/*.zip" />
    </fileset>
    <fileset dir="${lib.dir}" includes="**/*.jar" />
  </path>

  <target name="taskdefs"> 
    <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath>
        <pathelement location="${scala.home}/lib/scala-compiler.jar"/>
        <pathelement location="${scala.home}/lib/scala-library.jar"/>
      </classpath>
    </taskdef> 
  </target>
  <!--====================== Targets ============================-->
 

  <target name="scala-compile" depends="prepare">
    <scalac srcdir="${src.dir}" 
            destdir="${classes.dir}" 
            classpathref="scalacompile.classpath"
            force="changed">
      <include name="**/*.scala"/>
      <include name="**/*.java"/>
    </scalac>
  </target>

 
  <!-- create build directory structure -->
  <target name="prepare" depends="taskdefs">
    <mkdir dir="${classes.dir}" />
  </target>

  <!-- compile the java sources -->
  <target name="java-compile" depends="scala-compile">
    <javac classpathref="javacompile.classpath"
           srcdir="${src.dir}"
           destdir="${classes.dir}"
           debug="true"
           debuglevel="lines,source"
           source="1.5" />
  </target>

  <!-- copy resources (anything non-.java) from src to classes -->
  <target name="copy.resources" depends="prepare">
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}" excludes="**/*.java" />
    </copy>
  </target>

  <!-- create the JAR file -->
  <target name="jar" depends="java-compile, scala-compile, copy.resources" >
    <jar destfile="${jar.location}"
         update="false"
         basedir="${classes.dir}" />
  </target>

  <!-- remove the generated .class files -->
  <target name="clean.classes" >
    <delete dir="${classes.dir}" />
  </target>

  <!-- clean resources generated by tests -->
  <target name="clean.tests">
    <delete>
      <fileset dir="." includes="TEST*.xml" />
    </delete>
  </target>

  <!-- Clean up - remove .class and .jar files -->
  <target name="clean" depends="clean.classes, clean.tests" >
    <delete file="${jar.location}" />
  </target>

  <!-- Clean up everything, including Javadoc -->
  <target name="docclean" depends="clean, clean.javadoc" >
  </target>

  <!-- Build JavaDoc documentation -->
  <target name="doc.prepare">
    <mkdir dir="${javadoc.dir}" />
  </target>

  <!-- Clean JavaDoc documentation -->
  <target name="clean.javadoc">
    <delete dir="${javadoc.dir}" />
  </target>

  <!-- TODO! -->
  <target name="scala-tests" depends="jar"/>
  <target name="java-tests" depends="jar"/>
  
  
  <target name="doc" depends="javadoc,scaladoc" />

  <target name="javadoc" depends="doc.prepare">
    <javadoc destdir="${javadoc.dir}" packagenames="*"
             classpathref="compile.classpath"
             encoding="UTF-8"
             windowtitle="${plugin.name} JavaDoc"
             source="1.5">
      <sourcepath>
        <pathelement location="${src.dir}" />
      </sourcepath>
      <link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
      <link href="http://hudson.gate.ac.uk/job/GATE-Nightly/javadoc/"/>
    </javadoc>
  </target>
  
  <target name="scaladoc" depends="doc.prepare">
     <scaladoc windowtitle="${plugin.name} ScalaDoc"
       srcdir="${src.dir}"
       destdir="${scaladoc.dir}"
       deprecation="yes" unchecked="yes"
       classpathref="scalacompile.classpath"
       docttitle="${plugin.name} API ScalaDoc">
       <include name="**/**.scala" />
     </scaladoc>
   </target>
       

  <!-- Build everything - the code and JavaDoc -->
  <target name="all" depends="jar" />

  <!-- Other targets used by the main GATE build file:
         build: build the plugin - just calls "jar" target
         test : run the unit tests
         distro.prepare: remove intermediate files that shouldn't be in the
                         distribution
  -->
  <target name="build" depends="jar" />
  <target name="test" depends="scala-tests,java-tests" />
  <target name="distro.prepare" depends="clean.classes, clean.tests" />


</project>
