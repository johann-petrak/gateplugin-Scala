Components:
  Tool to bootstrap a Scala/Java mixed language plugin
  Shell script for scala interpreter that uses GATE and ScalaPlugin libs
  Embedded Interpreter, similar to jirb_swing or kawa
  Embedded Editor/Runner similar to ScalaPane
  PR to run a scala script: compile on init, run on exec, auto-use glue code
  glue code: implicits, dsl -- maybe similar to what Groovy does
    -> ultimately make the glue code choosable (if we mess up the first time, make it
       it easy to switch to a new approach) 

To get to the actual JAR files, implement Gate.DirectoryInfor.getJarURIs or similar. This should 
return the list of URIs as used before opening, not what was read from the creole.xml, i.e.
the URIs after making them absolute.


Issues with the classpath/classloader: once the interpreter is 
started, how can we make it aware of any jars the application
puts on the application classpath?

See sources:
  http://lampsvn.epfl.ch/trac/scala/browser/scala/trunk/src/compiler/scala/tools/nsc/interactive

Especially REPL and Global?

There are some links that may be relevant to this:
  http://www.scala-lang.org/node/5152
  https://gist.github.com/404272
  http://scala-programming-language.1934581.n4.nabble.com/scala-tools-nsc-Interpreter-and-classpath-td2548176.html
  http://speaking-my-language.blogspot.com/2009/11/embedded-scala-interpreter.html
  http://suereth.blogspot.com/2009/04/embedding-scala-interpreter.html
  http://code.google.com/p/lotrepls/
  http://code.google.com/p/lotrepls/source/browse/trunk/src/com/google/lotrepls/server/interpreters/ScalaInterpreter.java
  https://github.com/scala/scala/blob/master/test/files/jvm/interpreter.scala

  https://lampsvn.epfl.ch/trac/scala/wiki/Classpath
  http://lampsvn.epfl.ch/svn-repos/scala/scala-msil/trunk/src/compiler/scala/tools/util/PathResolver.scala

More:
  http://code.google.com/p/lotrepls/source/browse/trunk/src/com/google/lotrepls/server/interpreters/ScalaInterpreter.java
  http://code.google.com/p/sling-scala/source/browse/trunk/sling-scala/engine/src/main/java/org/apache/sling/scripting/scala/engine/ScalaScriptEngineFactory.java
  http://code.google.com/p/sling-scala/source/browse/trunk/sling-scala/interpreter/src/main/scala/org/apache/sling/scripting/scala/interpreter/ScalaInterpreter.scala
  http://permalink.gmane.org/gmane.comp.lang.scala/22243
  
My thread:
  http://www.scala-lang.org/node/5898
  http://www.scala-lang.org/node/8002
  

Even more:
  http://groups.google.com/group/scala-language/tree/browse_frm/thread/1eb149a995e4bbaa/d794ce5a1d7712aa?_done=%2Fgroup%2Fscala-language%2Fbrowse_frm%2Fthread%2F1eb149a995e4bbaa%2Fd794ce5a1d7712aa%3Ftvc%3D1%26&tvc=1
  Scalalab has something: http://code.google.com/p/scalalab/
 
Yet more:
  http://www.scala-lang.org/node/5152
  
   
The main approaches that already work for other languages:
  - KAWA has a Swing Console: http://www.gnu.org/software/kawa/toc.html
    see: http://per.bothner.com/blog/2007/ReplPane/
  - liverepl: https://github.com/djpowell/liverepl
    this shows how to use liverepl with clojure: https://gist.github.com/212785
  - ScalaInterpreterPane: more like an editor with run feature, see: https://github.com/Sciss/ScalaInterpreterPane
    uses: http://code.google.com/p/jsyntaxpane
  - ScalIDE: http://code.google.com/p/scalide/wiki/Home
  - jirb_swing may show some tricks

Console Swing in general: 
  http://www.exampledepot.com/egs/javax.swing.text/ta_Console.html
  http://www.java-forums.org/java-tips/6539-java-swing-class-capturing-output-console.html
  http://www.comweb.nl/java/Console/Console.html
  


Other stuff:
  - check out which Scala testing framework to use
    ScalaTest: seems to be able to test private methods: http://www.artima.com/weblogs/viewpost.jsp?thread=245958


